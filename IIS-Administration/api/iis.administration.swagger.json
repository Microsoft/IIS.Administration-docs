{
    "swagger": "2.0",
    "info": {
        "title": "IIS Administration",
        "description": "Administer IIS",
        "version": "2.2.0"
    },
    "host": "localhost:55539",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "produces": [
        "application/hal+json"
    ],
    "responses": {
        "201": {
            "description": "Success."
        },
        "204": {
            "description": "Success. No Content."
        },
        "400": {
            "description": "Argument error."
        },
        "404": {
            "description": "Cannot find the resource."
        },
        "415": {
            "description": "Invalid JSON request object."
        },
        "default": {
            "description": "Error.",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    },
    "securityDefinitions": {
        "apiToken": {
            "type": "apiKey",
            "in": "header",
            "name": "Access-Token"
        }
    },
    "security": [
        {
            "apiToken": []
        }
    ],
    "paths": {
        "/api/webserver": {
            "get": {
                "operationId": "GetWebServer",
                "security": [
                    {
                        "apiToken": []
                    }
                ],
                "summary": "Web Server",
                "description": "The web server endpoint returns information about the webserver that is installed on the machine. It also is an extensibility point for web server configuration and monitoring.\n",
                "tags": [
                    "Web Server"
                ],
                "responses": {
                    "200": {
                        "description": "The webserver resource",
                        "schema": {
                            "$ref": "#/definitions/WebServer"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/application-pools": {
            "get": {
                "operationId": "GetAppPools",
                "summary": "Lists the application pools on the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for app pool object.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ApplicationPool"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of application pools.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "app_pools": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationPool"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "CreateAppPool",
                "summary": "Create an application pool",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "pool",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                ],
                "tags": [
                    "ApplicationPool"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/application-pools/{id}": {
            "get": {
                "operationId": "GetAppPoolById",
                "summary": "View the settings for a specific application pool.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ApplicationPool"
                ],
                "responses": {
                    "200": {
                        "description": "The application pool with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateAppPool",
                "summary": "Update the application pool with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application pool",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "pool",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                ],
                "tags": [
                    "ApplicationPool"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteAppPool",
                "summary": "Delete the application pool with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/websites": {
            "get": {
                "operationId": "GetWebSites",
                "summary": "Lists the web sites on the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the websites.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebSite"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of web sites.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "websites": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WebSite"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "CreateWebSite",
                "summary": "Create a web site",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "site",
                        "schema": {
                            "$ref": "#/definitions/WebSite"
                        }
                    }
                ],
                "tags": [
                    "WebSite"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/websites/{id}": {
            "get": {
                "operationId": "GetWebSiteById",
                "summary": "View the settings for a specific web site.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the web site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebSite"
                ],
                "responses": {
                    "200": {
                        "description": "The web site with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/WebSite"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateWebSite",
                "summary": "Update the web site with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the web site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "website",
                        "schema": {
                            "$ref": "#/definitions/WebSite"
                        }
                    }
                ],
                "tags": [
                    "WebSite"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteWebSite",
                "summary": "Delete the web site with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the web site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/webapps": {            
            "get": {
                "operationId": "GetApplications",
                "summary": "Returns a list of applications.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the applications.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "application_pool.id",
                        "in": "query",
                        "description": "Retrieve applications for the application pool with the given id.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "website.id",
                        "in": "query",
                        "description": "Retrieve applications for the web site with the given id.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of applications.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "webapps": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Application"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "CreateApplication",
                "summary": "Creates a application for the web site specified in the request body.",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "webapp",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/webapps/{id}": {
            "get": {
                "operationId": "GetApplicationById",
                "summary": "View the settings for a specific application.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the application",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "responses": {
                    "200": {
                        "description": "The application with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateApplication",
                "summary": "Update the application with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "webapp",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteApplication",
                "summary": "Delete the application with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/virtual-directories": {            
            "get": {
                "operationId": "GetVirtualDirectories",
                "summary": "Returns a list of virtual directories.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the applications.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "webapp.id",
                        "in": "query",
                        "description": "Retrieve virtual directories for the application with the given id.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "website.id",
                        "in": "query",
                        "description": "Retrieve virtual directories for the web site with the given id.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Virtual Directories"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of virtual directories.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "virtual_directories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VirtualDirectory"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "CreateVirtualDirectory",
                "summary": "Creates a virtual directory for the web site or application specified in the request body.",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "vdir",
                        "schema": {
                            "$ref": "#/definitions/VirtualDirectory"
                        }
                    }
                ],
                "tags": [
                    "Virtual Directories"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/virtual-directories/{id}": {
            "get": {
                "operationId": "GetVirtualDirectoryById",
                "summary": "View the settings for a specific virtual directory.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the virtual directory",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Virtual Directories"
                ],
                "responses": {
                    "200": {
                        "description": "The virtual directory with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/VirtualDirectory"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateVirtualDirectory",
                "summary": "Update the virtual directory with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the virtual directory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "vdir",
                        "schema": {
                            "$ref": "#/definitions/VirtualDirectory"
                        }
                    }
                ],
                "tags": [
                    "Virtual Directories"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteVirtualDirectory",
                "summary": "Delete the virtual directory with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the virtual directory",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/worker-processes": {            
            "get": {
                "operationId": "GetWorkerProcesses",
                "summary": "Returns a list of all worker processes on the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the worker processes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "application_pool.id",
                        "in": "query",
                        "description": "Retrieve worker processes for the application pool with the given id.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WorkerProcesses"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of worker processes.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "worker_processes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkerProcess"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files": {
            "get": {
                "operationId": "GetFiles",
                "summary": "Returns a list of files and directories. Without specifying a folder via the 'parent.id' parameter, this endpoint will list the allowed root paths.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the files.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parent.id",
                        "in": "query",
                        "description": "Populate the files list with children of the specified directory.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of files.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/File"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "CreateFile",
                "summary": "Create a file",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "file",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/{id}": {
            "get": {
                "operationId": "GetFileById",
                "summary": "View the properties of a file.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "The file with the given id",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateFile",
                "summary": "Update the file with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "file",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteFile",
                "summary": "Delete the file with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/content/{id}": {
            "head": {
                "operationId": "GetFileContentHeaders",
                "summary": "Retrieves the headers for a file content request. Performing a head operation before a get allows a client to see how long the file is and then request the file in multiple sections.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "Headers for the content response"
                    }
                }
            },
            "get": {
                "operationId": "GetFileContent",
                "summary": "Retrieves the content of a file. This endpoint supports range requests to select sections of the files content.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "The content of the file with the given id",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "put": {
                "operationId": "UpdateFileContent",
                "summary": "Sets the content of a file. This endpoint supports range requests to update the file in parts.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "content",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/downloads": {
            "post": {
                "operationId": "CreateDownload",
                "summary": "Creates a download link for the file specified in the body. The download link is returned in the location header.",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "download",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/201"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/copy": {
            "post": {
                "operationId": "CopyFile",
                "summary": "Copy a file or folder into a new directory. A folder cannot be copied into itself.",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "copyArgument",
                        "schema": {
                            "$ref": "#/definitions/CopyArgument"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "201": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/CopyProgress"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/copy/{id}": {
            "get": {
                "operationId": "GetCopyProgress",
                "summary": "Retrieves resource indicating the progress of the copy operation.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "A resource indicating the progress of the copy operation.",
                        "schema": {
                            "$ref": "#/definitions/CopyProgress"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/move": {
            "post": {
                "operationId": "MoveFile",
                "summary": "Move a file or folder to a new directory. A folder cannot be moved into itself.",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "moveArgument",
                        "schema": {
                            "$ref": "#/definitions/MoveArgument"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "201": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/MoveProgress"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "415": {
                        "$ref": "#/responses/415"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/files/move/{id}": {
            "get": {
                "operationId": "GetMoveProgress",
                "summary": "Retrieves resource indicating the progress of the move operation.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "A resource indicating the progress of the move operation.",
                        "schema": {
                            "$ref": "#/definitions/MoveProgress"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/files": {
            "get": {
                "operationId": "GetWebServerFiles",
                "summary": "Returns a list of files, directories, and virtual directories. These resources belong to a given website and their path is determined relative to the root of the web site.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select additional or specific fields for the web files.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parent.id",
                        "in": "query",
                        "description": "Populate the files list with children of the specified directory.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "website.id",
                        "in": "query",
                        "description": "This optional value allows for retrieving files relative to the root of a website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "Combines with website.id to return the resource with the given relative path in relation to the root of the website.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebFiles"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of web files.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WebFile"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/files/{id}": {
            "get": {
                "operationId": "GetWebFileById",
                "summary": "View the properties of a file.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the file.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebFiles"
                ],
                "responses": {
                    "200": {
                        "description": "The file with the given id",
                        "schema": {
                            "$ref": "#/definitions/WebFile"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateWebFile",
                "summary": "Update the file with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "webfile",
                        "schema": {
                            "$ref": "#/definitions/WebFile"
                        }
                    }
                ],
                "tags": [
                    "WebFiles"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Argument error."
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "415": {
                        "description": "Invalid JSON request object."
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteWebFile",
                "summary": "Delete the file with the specified id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/monitoring": {
            "get": {
                "operationId": "GetWebServerSnapshot",
                "summary": "Retreives a performance and monitoring snapshot of the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select specific fields for the snapshot.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebServer",
                    "Snapshot",
                    "Performance",
                    "Monitoring"
                ],
                "responses": {
                    "200": {
                        "description": "The performance and monitoring snapshot.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "websites": {
                                    "type": "Object",
                                    "items": {
                                        "$ref": "#/definitions/WebServerSnapshot"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/websites/monitoring": {
            "get": {
                "operationId": "GetWebSiteSnapshots",
                "summary": "Lists performance and monitoring snapshots for web sites on the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select specific fields for the websites.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebSite",
                    "Snapshot",
                    "Performance",
                    "Monitoring"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of web sites.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "websites": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WebSiteSnapshot"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/websites/monitoring/{id}": {
            "get": {
                "operationId": "GetWebSiteSnapshotById",
                "summary": "View the performance and monitoring snapshot for a specific web site.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the web site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "WebSite",
                    "Snapshot",
                    "Performance",
                    "Monitoring"
                ],
                "responses": {
                    "200": {
                        "description": "The performance and monitoring snapshot of thew web site with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/WebSiteSnapshot"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/application-pools/monitoring": {
            "get": {
                "operationId": "GetApplicationPoolSnapshots",
                "summary": "Lists performance and monitoring snapshots for application pools on the web server.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Select specific fields for the application pools.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ApplicationPool",
                    "Snapshot",
                    "Performance",
                    "Monitoring"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of application pools.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "websites": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationPoolSnapshot"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/application-pools/monitoring/{id}": {
            "get": {
                "operationId": "GetApplicationPoolSnapshotById",
                "summary": "View the performance and monitoring snapshot for a specific application pool.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the application pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ApplicationPool",
                    "Snapshot",
                    "Performance",
                    "Monitoring"
                ],
                "responses": {
                    "200": {
                        "description": "The performance and monitoring snapshot of thew application pool with the specified id.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPoolSnapshot"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/default-documents": {
            "get": {
                "operationId": "GetDefaultDocument",
                "summary": "View the default document settings for the specified level in the configuration.",
                "description": "The scope of the configuration that the settings are shown for are controlled by the query parameter that is given. Scope can be used to specify a specific path in the configuration system. The server scope is the empty string ''. Any other valid scope starts with a site and then includes the virtual path. e.g. site1/myapp/myvdir. Specifying the website.id targets the settings for the site with the specified id. Specifying the webapp.id  parameter targets the settings for the application with the specified id.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "scope",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "website.id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "webapp.id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocument"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/default-documents/{id}": {
            "get": {
                "operationId": "GetDefaultDocumentById",
                "summary": "View the default document settings identified by the id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the default document settings",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocument"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateDefaultDocument",
                "summary": "Update the default document configuration feature for a certain level in the configuration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the default document feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocument"
                        }
                    }
                ],
                "tags": [
                    "DefaultDocument"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocument"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/default-documents/files": {
            "get": {
                "operationId": "GetDefaultDocumentEntries",
                "summary": "Get the entries for the default document feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "default_document.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of default document entries.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "entries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DefaultDocumentEntry"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateDefaultDocumentEntry",
                "summary": "Creates a default document entry at a given scope at the scope specified by the default_document property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "DefaultDocumentEntry",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocumentEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The entry was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocumentEntry"
                        }
                    }
                }
            }
        },
        "/api/webserver/default-documents/files/{id}": {
            "get": {
                "operationId": "GetDefaultDocumentEntryById",
                "summary": "Get a specific entry for the default document feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/DefaultDocumentEntry"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteDefaultDocumentEntry",
                "summary": "Removes an entry from the default document feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/{id}": {
            "get": {
                "operationId": "GetUrlRewrite",
                "summary": "Retrieve the Url Rewrite resource which is used to link to the features of Url Rewrite such as inbound and outbound rewrite rules.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewrite"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "post": {
                "operationId": "InstallUrlRewrite",
                "summary": "Installs Url Rewrite for the web server",
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/UrlRewrite"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "delete": {
                "operationId": "UninstallUrlRewrite",
                "summary": "Uninstalls Url Rewrite for the web server",
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/allowed-server-variables/{id}": {
            "get": {
                "operationId": "GetAllowedServerVariables",
                "summary": "Retrieve the allowed server variables resource.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/AllowedServerVariablesSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateAllowedServerVariables",
                "summary": "Updates the allowed server variables settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the allowed server variables resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/AllowedServerVariablesSection"
                        }
                    }
                ],
                "tags": [
                    "AllowedServerVariables"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AllowedServerVariablesSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertAllowedServerVariables",
                "summary": "Resets the settings for the targeted allowed server variables section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/inbound/{id}": {
            "get": {
                "operationId": "GetInboundRulesSection",
                "summary": "Retrieve the inbound rules section resource which contains the settings general settings and links to the list of inbound rules for the targeted scope.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/InboundRulesSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateInboundRulesSection",
                "summary": "Updates the inbound rules settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the inbound rules section",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/InboundRulesSection"
                        }
                    }
                ],
                "tags": [
                    "InboundRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InboundRulesSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertInboundRules",
                "summary": "Resets the settings for the targeted inbound rules section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/inbound/rules": {
            "get": {
                "operationId": "GetInboundRules",
                "summary": "Get the inbound rules for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of inbound rules.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InboundRule"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateInboundRule",
                "summary": "Creates an inbound rule at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "InboundRule",
                        "schema": {
                            "$ref": "#/definitions/InboundRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rule was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/InboundRule"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/inbound/rules/{id}": {
            "get": {
                "operationId": "GetInboundRuleById",
                "summary": "Get a specific inbound rule for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/InboundRule"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteInboundRule",
                "summary": "Removes an inbound rule from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateInboundRule",
                "summary": "Update the inbound rule for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "rule",
                        "schema": {
                            "$ref": "#/definitions/InboundRule"
                        }
                    }
                ],
                "tags": [
                    "InboundRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InboundRule"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/{id}": {
            "get": {
                "operationId": "GetOutboundRulesSection",
                "summary": "Retrieve the outbound rules section resource which contains the settings general settings and links to the list of outbound rules for the targeted scope.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/OutboundRulesSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateOutboundRulesSection",
                "summary": "Updates the outbound rules settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the outbound rules section",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/OutboundRulesSection"
                        }
                    }
                ],
                "tags": [
                    "OutboundRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OutboundRulesSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertOutboundRules",
                "summary": "Resets the settings for the targeted outbound rules section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/rules": {
            "get": {
                "operationId": "GetOutboundRules",
                "summary": "Get the outbound rules for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of outbound rules.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OutboundRule"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateOutboundRule",
                "summary": "Creates an outbound rule at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "OutboundRule",
                        "schema": {
                            "$ref": "#/definitions/OutboundRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rule was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/OutboundRule"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/rules/{id}": {
            "get": {
                "operationId": "GetOutboundRuleById",
                "summary": "Get a specific outbound rule for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/OutboundRule"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteOutboundRule",
                "summary": "Removes an outbound rule from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateOutboundRule",
                "summary": "Update the outbound rule for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "rule",
                        "schema": {
                            "$ref": "#/definitions/OutboundRule"
                        }
                    }
                ],
                "tags": [
                    "OutboundRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OutboundRule"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/preconditions": {
            "get": {
                "operationId": "GetPreconditions",
                "summary": "Get the preconditions for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of preconditions.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "preconditions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Precondition"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreatePrecondition",
                "summary": "Creates an precondition at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "Precondition",
                        "schema": {
                            "$ref": "#/definitions/Precondition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The precondition was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/Precondition"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/preconditions/{id}": {
            "get": {
                "operationId": "GetPreconditionById",
                "summary": "Get a specific precondition for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/Precondition"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeletePrecondition",
                "summary": "Removes an precondition from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdatePrecondition",
                "summary": "Update the precondition for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "precondition",
                        "schema": {
                            "$ref": "#/definitions/Precondition"
                        }
                    }
                ],
                "tags": [
                    "Preconditions"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Precondition"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/custom_tags": {
            "get": {
                "operationId": "GetCustomTagSets",
                "summary": "Get the custom tag sets for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of custom tag sets.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "custom_tags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomTagSet"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateCustomTagSet",
                "summary": "Creates an custom tag set at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "CustomTagSet",
                        "schema": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The custom tag set was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/outbound/custom_tags/{id}": {
            "get": {
                "operationId": "GetCustomTagSetById",
                "summary": "Get a specific custom tag set for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteCustomTagSet",
                "summary": "Removes an custom tag set from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateCustomTagSet",
                "summary": "Update the custom tag set for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "custom tag set",
                        "schema": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    }
                ],
                "tags": [
                    "CustomTagSets"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/providers/{id}": {
            "get": {
                "operationId": "GetProvidersSection",
                "summary": "Retrieve the providers section resource which contains the settings general settings and links to the list of providers for the targetted scope.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvidersSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateRewriteProvidersSection",
                "summary": "Updates the providers settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the providers section",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvidersSection"
                        }
                    }
                ],
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvidersSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertProviders",
                "summary": "Resets the settings for the targetted providers section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/providers/entries": {
            "get": {
                "operationId": "GetUrlRewriteProviders",
                "summary": "Get the provider entries for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of provider entries.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "entries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UrlRewriteProvider"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateUrlRewriteProvider",
                "summary": "Creates an provider entry at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "UrlRewriteProvider",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvider"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rule was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvider"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/providers/entries/{id}": {
            "get": {
                "operationId": "GetUrlRewriteProviderById",
                "summary": "Get a specific provider entry for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvider"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteUrlRewriteProvider",
                "summary": "Removes an provider entry from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateUrlRewriteProvider",
                "summary": "Update the provider entry for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "rule",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvider"
                        }
                    }
                ],
                "tags": [
                    "UrlRewriteProviders"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteProvider"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/rewrite-maps/{id}": {
            "get": {
                "operationId": "GetRewriteMapsSection",
                "summary": "Retrieve the rewrite maps section resource which contains the settings general settings and links to the list of rewrite maps for the targetted scope.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteRewriteMapsSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateRewriteMapsSection",
                "summary": "Updates the rewrite maps settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the rewrite maps section",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteRewriteMapsSection"
                        }
                    }
                ],
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteRewriteMapsSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertRewriteMaps",
                "summary": "Resets the settings for the targetted rewrite maps section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/rewrite-maps/entries": {
            "get": {
                "operationId": "GetUrlRewriteMaps",
                "summary": "Get the rewrite map entries for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of rewrite map entries.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "entries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UrlRewriteMap"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateUrlRewriteMap",
                "summary": "Creates an rewrite map entry at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "UrlRewriteMap",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteMap"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rule was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteMap"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/rewrite-maps/entries/{id}": {
            "get": {
                "operationId": "GetUrlRewriteMapById",
                "summary": "Get a specific rewrite map entry for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteMap"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteUrlRewriteMap",
                "summary": "Removes an rewrite map entry from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateUrlRewriteMap",
                "summary": "Update the rewrite map entry for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "rule",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteMap"
                        }
                    }
                ],
                "tags": [
                    "UrlRewriteMaps"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UrlRewriteMap"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/global/{id}": {
            "get": {
                "operationId": "GetGlobalRulesSection",
                "summary": "Retrieve the global rules section resource which contains the settings general settings and links to the list of global rules for the targeted scope.",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/GlobalRulesSection"
                        }
                    },
                    "404": {
                        "description": "not found"
                    },
                    "default": {
                        "$ref": "#/responses/default"
                    }
                }
            },
            "patch": {
                "operationId": "UpdateGlobalRulesSection",
                "summary": "Updates the global rules settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id for the global rules section",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "feature",
                        "schema": {
                            "$ref": "#/definitions/GlobalRulesSection"
                        }
                    }
                ],
                "tags": [
                    "GlobalRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GlobalRulesSection"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "delete": {
                "operationId": "RevertGlobalRules",
                "summary": "Resets the settings for the targeted global rules section to the settings of its parent in the configuration hierarchy.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/global/rules": {
            "get": {
                "operationId": "GetGlobalRules",
                "summary": "Get the global rules for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "query",
                        "name": "url_rewrite.id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the array of global rules.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GlobalRule"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "operationId": "CreateGlobalRule",
                "summary": "Creates an global rule at the scope specified by the url_rewrite property",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "GlobalRule",
                        "schema": {
                            "$ref": "#/definitions/GlobalRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rule was created successfully. The resource's location is in the location header.",
                        "schema": {
                            "$ref": "#/definitions/GlobalRule"
                        }
                    }
                }
            }
        },
        "/api/webserver/url-rewrite/global/rules/{id}": {
            "get": {
                "operationId": "GetGlobalRuleById",
                "summary": "Get a specific global rule for the Url Rewrite feature at a certain level in the configuration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/GlobalRule"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "operationId": "DeleteGlobalRule",
                "summary": "Removes an global rule from the Url Rewrite feature at a given scope in the configuration feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "description": "Specifies the location of the configuration file to edit.",
                        "type": "string",
                        "name": "config_scope"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "404": {
                        "description": "Not found."
                    }
                }
            },
            "patch": {
                "operationId": "UpdateGlobalRule",
                "summary": "Update the global rule for the Url Rewrite feature at a given scope in the configuration feature",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "required": true,
                        "name": "rule",
                        "schema": {
                            "$ref": "#/definitions/GlobalRule"
                        }
                    }
                ],
                "tags": [
                    "GlobalRules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GlobalRule"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        }
    },
    "definitions": {
        "HAL": {
            "type": "object",
            "required": [
                "href"
            ],
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "metadata": {
            "type": "object",
            "properties": {
                "is_local": {
                    "type": "boolean"
                },
                "is_locked": {
                    "type": "boolean"
                },
                "override_mode": {
                    "type": "string",
                    "enum": [
                        "allow",
                        "deny"
                    ]
                },
                "override_mode_effective": {
                    "type": "string",
                    "enum": [
                        "allow",
                        "deny"
                    ]
                }
            }
        },
        "_links": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/HAL"
            }
        },
        "WebServer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the webserver resource."
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "ApplicationPool": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the application pool."
                },
                "id": {
                    "type": "string",
                    "description": "A unique identifier for the application pool."
                },
                "status": {
                    "description": "The run-time state of the current application pool.",
                    "type": "string",
                    "enum": [
                        "started",
                        "stopped"
                    ]
                },
                "auto_start": {
                    "description": "A value indicating whether the current application pool starts automatically when created or when IIS starts.",
                    "type": "boolean"
                },
                "pipeline_mode": {
                    "description": "This property specifies whether the request-processing pipeline mode is Integrated or Classic. In Classic mode, managed application events are executed by using ISAPI. In Integrated mode, ASP.NET request processing integrates directly into the IIS request-processing pipeline. Integrated mode enables you to configure managed modules for Web sites that are developed with unmanaged code. For example, you can use managed Forms authentication for a Web site that is developed with ASP.",
                    "type": "string",
                    "enum": [
                        "integrated",
                        "classic"
                    ]
                },
                "managed_runtime_version": {
                    "description": "The version of the .NET Framework that is used for managed applications in the current application pool.",
                    "type": "string",
                    "enum": [
                        "v4.0",
                        "v2.0"
                    ]
                },
                "queue_length": {
                    "type": "number",
                    "description": "The maximum number of requests to queue before rejecting additional requests.",
                    "minimum": 10,
                    "maximum": 65535
                },
                "cpu": {
                    "description": "CPU usage parameters for the current application pool.",
                    "type": "object",
                    "properties": {
                        "limit": {
                            "description": "The maximum percentage of CPU time, in hundredths of one percent, that the worker processes in an application pool are allowed to consume over a period of time. The default is 0, which disables CPU limiting.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100000
                        },
                        "limit_interval": {
                            "description": "A time in minutes that specifies the reset period for CPU monitoring and throttling limits on an application pool. The default is 0, which disables CPU monitoring.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1440
                        },
                        "action": {
                            "description": "The actions that IIS takes when an application pool exceeds the CPU limit specified by the Limit property.",
                            "type": "string",
                            "enum": [
                                "NoAction",
                                "KillW3wp",
                                "Throttle",
                                "ThrottleUnderLoad"
                            ]
                        },
                        "processor_affinity_enabled": {
                            "description": "This property specifies whether a particular worker process assigned to an application pool should also be assigned to a given CPU. This property is used in combination with the processor_affinity_mask property.",
                            "type": "boolean"
                        },
                        "processor_affinity_mask32": {
                            "description": "A value that indicates the CPU affinity for the application pool. The default is 0xFFFFFFFF.",
                            "type": "string"
                        },
                        "processor_affinity_mask64": {
                            "description": "A value that indicates the CPU affinity for the application pool. The default is 0xFFFFFFFF.",
                            "type": "string"
                        }
                    }
                },
                "process_model": {
                    "type": "object",
                    "properties": {
                        "idle_timeout": {
                            "description": "The period of time in minutes that a worker process should run if no new requests are received and the worker process is not processing requests. After the allotted time passes, the worker process will be shut down.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 43200
                        },
                        "idle_timeout_action": {
                            "description": "The action to perform if a worker process is shut down from an idle timeout.",
                            "type": "string",
                            "enum": [
                                "Terminate",
                                "Suspend"
                            ]
                        },
                        "max_processes": {
                            "description": "The number of processes associated with the current application pool. The default is 1.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 2147483647
                        },
                        "pinging_enabled": {
                            "description": "The pinging behavior for the worker process health monitoring. true if the process model supports health-monitor pinging; otherwise, false. The default is true.",
                            "type": "boolean"
                        },
                        "ping_interval": {
                            "description": "A value in seconds that specifies the interval between health-monitoring pings that the WWW service sends to a worker process. The default is 30 seconds.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967
                        },
                        "ping_response_time": {
                            "description": "A value in seconds that specifies the period of time that a worker process is given to respond to a health-monitoring ping. The default is 90 seconds.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967
                        },
                        "shutdown_time_limit": {
                            "description": "A value in seconds that specifies the period of time that IIS waits for requests to finish running in a worker process before IIS terminates the worker process. The default is 90 seconds.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967
                        },
                        "startup_time_limit": {
                            "description": "A value in seconds that specifies the period of time that IIS waits for an application pool to start. The default is 90 seconds.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967
                        }
                    }
                },
                "identity": {
                    "type": "object",
                    "properties": {
                        "identity_type": {
                            "description": "The values of this enumeration enable you to configure your application pools to run under the security context of an existing security account or a custom account. If you configure the process model to use the SpecificUser value, you must also configure the username and password properties of the identity property.",
                            "type": "string",
                            "enum": [
                                "LocalSystem",
                                "LocalService",
                                "NetworkService",
                                "SpecificUser",
                                "ApplicationPoolIdentity"
                            ]
                        },
                        "username": {
                            "description": "The user name associated with the security identity under which the application pool runs.",
                            "type": "string"
                        },
                        "load_user_profile": {
                            "description": "true if the user profile will be loaded when the application pool starts; otherwise, false. The default is false.",
                            "type": "boolean"
                        },
                        "password": {
                            "description": "A write-only property specifying the password to use with the given username if identity_type is set to SpecificUser.",
                            "type": "string"
                        }
                    }
                },
                "recycling": {
                    "type": "object",
                    "properties": {
                        "disable_overlapped_recycle": {
                            "description": "This property specifies whether the World Wide Web Publishing Service (WWW service) should start another worker process to replace the existing worker process while it is shutting down. You should set the value of this property to true if the worker process loads application code that does not support multiple instances of worker processes. true if overlapping rotation is not allowed; otherwise, false. The default is false.",
                            "type": "boolean"
                        },
                        "disable_recycle_on_config_change": {
                            "description": "This property specifies whether the World Wide Web Publishing Service (WWW service) should rotate worker processes in an application pool when the configuration changes. true if config change recycling is not allowed; otherwise, false. The default is false.",
                            "type": "boolean"
                        },
                        "log_events": {
                            "description": "This property specifies that IIS should log an event when an application pool is recycled for one or more of the reasons defined.",
                            "type": "object",
                            "properties": {
                                "time": {
                                    "type": "boolean"
                                },
                                "requeuessts": {
                                    "type": "boolean"
                                },
                                "schedule": {
                                    "type": "boolean"
                                },
                                "memory": {
                                    "type": "boolean"
                                },
                                "isapi_unhealthy": {
                                    "type": "boolean"
                                },
                                "on_demand": {
                                    "type": "boolean"
                                },
                                "config_change": {
                                    "type": "boolean"
                                },
                                "private_memory": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "periodic_restart": {
                            "description": "An object that can be used to conditionally restart application pools. Application pools can be conditionally restarted based on limits of virtual memory, private memory, the number of requests, or time periods. Application pools can also be periodically restarted at any number of scheduled times. The object returned by this property provides access to configure all conditional and periodic application pool restarts.",
                            "type": "object",
                            "properties": {
                                "time_interval": {
                                    "description": "A value in minutes that specifies the period of time that should elapse before a worker process is recycled. The default is 1740.",
                                    "type": "number"
                                },
                                "private_memory": {
                                    "description": "The amount of private memory, in kilobytes, that a worker process can use before the worker process is recycled. The default is 0.",
                                    "type": "number"
                                },
                                "request_limit": {
                                    "description": "The number of requests that a worker process should process before it is recycled.",
                                    "type": "number"
                                },
                                "virtual_memory": {
                                    "description": "The amount of virtual memory, in kilobytes, that a worker process can use before the worker process is recycled. The default is 0.",
                                    "type": "number"
                                },
                                "schedule": {
                                    "description": "A list of specific times local times, in 24 hour format, when the application pool is recycled. e.g. 08:00, 15:00, 21:30.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "rapid_fail_protection": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "true indicates that the applications in an application pool are put out of service when the number of worker process crashes reaches the maximum specified by the max_crashes property within the time specified by the interval property. The default is true. When an application pool detects that too many of its worker processes have become unhealthy in a specified period of time, rapid-fail protection is initiated. The communication channel for IIS is dropped. IIS detects the loss of communication, sends an error or warning to the event log, and then restarts the worker process. The application pool is taken out of service, and the kernel-mode driver returns an out-of-service message (503 Service Unavailable) to requests to that application pool.",
                            "type": "boolean"
                        },
                        "load_balancer_capabilities": {
                            "description": "This property specifies behavior when a worker process cannot be started (for example, when the request queue is full or an application pool is in rapid-fail protection). A value of TcpLevel terminates the connection. The default value of HttpLevel sends error code 503 (Service Unavailable).",
                            "type": "string",
                            "enum": [
                                "HttpLevel",
                                "TcpLevel"
                            ]
                        },
                        "interval": {
                            "description": "A value in minutes that indicates the interval of time before the failure count for a process is reset. The default is 5 minutes.",
                            "type": "number"
                        },
                        "max_crashes": {
                            "description": "The maximum number of application pool failures allowed. The default is 5.",
                            "type": "number"
                        },
                        "auto_shutdown_exe": {
                            "description": "This property specifies an executable to run when the World Wide Web Publishing Service (WWW service) shuts down an application pool. Use the auto_shutdown_params property to set parameters for the executable.",
                            "type": "string"
                        },
                        "auto_shutdown_params": {
                            "description": "The command-line parameters for the executable specified by the auto_shutdown_exe property.",
                            "type": "string"
                        }
                    }
                },
                "process_orphaning": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "This property specifies whether to assign a worker process to an orphan state instead of terminating it when an application pool fails.",
                            "type": "boolean"
                        },
                        "orphan_action_exe": {
                            "description": "This property specifies an executable to run when the World Wide Web Publishing Service (WWW service) orphans a worker process.",
                            "type": "string"
                        },
                        "orphan_action_params": {
                            "description": "Command-line parameters for the executable specified by the orphan_action_exe property.",
                            "type": "string"
                        }
                    }
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "WebSite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique identifier for the web site."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web site."
                },
                "physical_path": {
                    "type": "string",
                    "description": "The location of the web site's root directory in the file system"
                },
                "key": {
                    "type": "number",
                    "description": "The unique ID of the web site as seen in IIS's applicationHost.config file. This key can be used to correlate sites between different IIS management systems."
                },
                "server_auto_start": {
                    "type": "boolean",
                    "description": "A value indicating whether the web site should automatically start."
                },
                "enabled_protocols": {
                    "type": "string",
                    "description": "Communication protocols that are enabled for the web site."
                },
                "limits": {
                    "type": "object",
                    "properties": {
                        "connection_timeout": {
                            "type": "integer",
                            "description": "The period of time IIS waits before it considers a connection inactive."
                        },
                        "max_bandwidth": {
                            "type": "integer",
                            "description": "Maximum network bandwidth in bytes per second."
                        },
                        "max_connections": {
                            "type": "integer",
                            "description": "Maximum number of simultaneous connections allowed for a web site."
                        },
                        "max_url_segments": {
                            "type": "integer",
                            "description": "Maximum number of URL segments allowed in any given request to the web site."
                        }
                    }
                },
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WebSiteBinding"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status indicating whether or not the site is capable of handling requests.",
                    "enum": [
                        "started",
                        "stopped",
                        "unknown"
                    ]
                },
                "application_pool": {
                    "$ref": "#/definitions/ApplicationPool"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "Application": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The full path of the application beginning with the web site name."
                },
                "id": {
                    "type": "string",
                    "description": "A unique identifier for the application."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the application. This path is used to resolve the application in the URL relative to the root of the web site."
                },
                "physical_path": {
                    "type": "string",
                    "description": "The location of the application's root directory in the file system"
                },
                "enabled_protocols": {
                    "type": "string",
                    "description": "Communication protocols that are enabled for the application."
                },
                "website": {
                    "$ref": "#/definitions/WebSite",
                    "description": "The web site that the application belongs to."
                },
                "application_pool": {
                    "$ref": "#/definitions/ApplicationPool",
                    "description": "The application pool that the application belongs to."
                }
            }
        },
        "VirtualDirectory": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The full path of the virtual directory beginning with the web site name."
                },
                "id": {
                    "type": "string",
                    "description": "A unique identifier for the virtual directory."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the virtual directory relative to the application that it belongs to."
                },
                "physical_path": {
                    "type": "string",
                    "description": "The location of the virtual directory in the file system"
                },
                "identity": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "description": "The username for the identity used to access the virtual directory."
                        },
                        "password": {
                            "type": "string",
                            "description": "This property is write only. Sets the password for the identity used to access the virtual directory."
                        },
                        "logon_method": {
                            "type": "string",
                            "description": "Specifies the type of logon to use when accessing the virtual directory. Documentation for the different logon types can be found in the MSDN entry for the Windows LogonUser function.",
                            "enum": [
                                "interactive",
                                "batch",
                                "network",
                                "network_cleartext"
                            ]
                        }
                    }
                },
                "webapp": {
                    "$ref": "#/definitions/Application",
                    "description": "The application that the virtual directory belongs to."
                },
                "website": {
                    "$ref": "#/definitions/WebSite",
                    "description": "The web site that the virtual directory belongs to."
                }
            }
        },
        "WebSiteBinding": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string",
                    "description": "The protocol the binding will listen for."
                },
                "binding_information": {
                    "type": "string",
                    "description": "A serialized string that describes the binding in the following format '{IP address}:{port}:{hostname}'."
                },
                "ip_address": {
                    "type": "string",
                    "description": "The IP address the binding will listen for."
                },
                "port": {
                    "type": "number",
                    "description": "The port the binding will listen on."
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname that will resolve to the binding."
                },
                "certificate": {
                    "$ref": "#/definitions/Certificate"
                },
                "require_sni": {
                    "type": "boolean",
                    "description": "Indicated whether the binding should require Server Name Identification from clients in order to take the request. This property is only available on HTTPS bindings that have an SSL certificate."
                }
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issued_by": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "thumbprint": {
                    "type": "string"
                },
                "signature_algorithm": {
                    "type": "string"
                },
                "valid_from": {
                    "type": "string",
                    "format": "date"
                },
                "valid_to": {
                    "type": "string",
                    "format": "date"
                },
                "version": {
                    "type": "number"
                },
                "intended_purposes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "private_key": {
                    "type": "object",
                    "properties": {
                        "exportable": {
                            "type": "boolean"
                        }
                    }
                },
                "subject_alternative_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "store": {
                    "$ref": "#/definitions/CertificateStore"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "CertificateStore": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "WorkerProcess": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "process_id": {
                    "type": "integer"
                },
                "process_guid": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string",
                    "format": "date"
                },
                "working_set": {
                    "type": "integer"
                },
                "peak_working_set": {
                    "type": "integer"
                },
                "private_memory_size": {
                    "type": "integer"
                },
                "peak_virtual_memory_size": {
                    "type": "integer"
                },
                "total_processor_time": {
                    "type": "integer"
                },
                "application_pool": {
                    "$ref": "#/definitions/ApplicationPool"
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "file",
                        "directory"
                    ]
                },
                "physical_path": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "created": {
                    "type": "string",
                    "format": "date"
                },
                "last_modified": {
                    "type": "string",
                    "format": "date"
                },
                "last_access": {
                    "type": "string",
                    "format": "date"
                },
                "e_tag": {
                    "type": "string"
                },
                "total_files": {
                    "type": "integer"
                },
                "parent": {
                    "$ref": "#/definitions/File"
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "WebFile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "file",
                        "directory",
                        "vdir",
                        "application"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/WebFile"
                },
                "website": {
                    "$ref": "#/definitions/WebSite"
                },
                "file_info": {
                    "$ref": "#/definitions/File"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "Download": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/File"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The total number of milliseconds the download will be available."
                }
            }
        },
        "CopyArgument": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "The file to copy.",
                    "$ref": "#/definitions/File"
                },
                "parent": {
                    "description": "The folder to copy the file to.",
                    "$ref": "#/definitions/File"
                },
                "name": {
                    "type": "string",
                    "description": "The new name of the copy."
                }
            }
        },
        "CopyProgress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "description": "The status time of the copy operation.",
                    "type": "string"
                },
                "created": {
                    "description": "The start time of the copy operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "current_size": {
                    "description": "Progress of the copy operation",
                    "type": "integer"
                },
                "total_size": {
                    "description": "Size of the source file",
                    "type": "integer"
                },
                "file": {
                    "description": "The file info for the destination file.",
                    "$ref": "#/definitions/File"
                }
            }
        },
        "MoveArgument": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "The file to move.",
                    "$ref": "#/definitions/File"
                },
                "parent": {
                    "description": "The folder to move the file to.",
                    "$ref": "#/definitions/File"
                },
                "name": {
                    "type": "string",
                    "description": "The new name of the file."
                }
            }
        },
        "MoveProgress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "description": "The status time of the move operation.",
                    "type": "string"
                },
                "created": {
                    "description": "The start time of the move operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "current_size": {
                    "description": "Progress of the move operation",
                    "type": "integer"
                },
                "total_size": {
                    "description": "Size of the source file",
                    "type": "integer"
                },
                "file": {
                    "description": "The file info for the destination file.",
                    "$ref": "#/definitions/File"
                }
            }
        },
        "WebServerSnapshot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "network": {
                    "type": "object",
                    "properties": {
                        "bytes_sent_sec": {
                            "type": "number"
                        },
                        "bytes_recv_sec": {
                            "type": "number"
                        },
                        "connection_attempts_sec": {
                            "type": "number"
                        },
                        "total_bytes_sent": {
                            "type": "number"
                        },
                        "total_bytes_recv": {
                            "type": "number"
                        },
                        "total_connection_attempts": {
                            "type": "number"
                        },
                        "current_connections": {
                            "type": "number"
                        }
                    }
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "number"
                        },
                        "per_sec": {
                            "type": "number"
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                },
                "memory": {
                    "type": "object",
                    "properties": {
                        "handles": {
                            "type": "number"
                        },
                        "private_bytes": {
                            "type": "number"
                        },
                        "private_working_set": {
                            "type": "number"
                        },
                        "system_in_use": {
                            "type": "number"
                        },
                        "installed": {
                            "type": "number"
                        }
                    }
                },
                "cpu": {
                    "type": "object",
                    "properties": {
                        "threads": {
                            "type": "number"
                        },
                        "processes": {
                            "type": "number"
                        },
                        "percent_usage": {
                            "type": "number"
                        },
                        "system_percent_usage": {
                            "type": "number"
                        }
                    }
                },
                "disk": {
                    "type": "object",
                    "properties": {
                        "io_write_operations_sec":{
                            "type": "number"
                        },
                        "io_read_operations_sec": {
                            "type": "number"
                        },
                        "page_faults_sec": {
                            "type": "number"
                        }
                    }
                },
                "cache": {
                    "type": "object",
                    "properties": {
                        "file_cache_count": {
                            "type": "number"
                        },
                        "file_cache_memory_usage": {
                            "type": "number"
                        },
                        "file_cache_hits": {
                            "type": "number"
                        },
                        "file_cache_misses": {
                            "type": "number"
                        },
                        "total_files_cached": {
                            "type": "number"
                        },
                        "output_cache_count": {
                            "type": "number"
                        },
                        "output_cache_memory_usage": {
                            "type": "number"
                        },
                        "output_cache_hits": {
                            "type": "number"
                        },
                        "output_cache_misses": {
                            "type": "number"
                        },
                        "uri_cache_count": {
                            "type": "number"
                        },
                        "uri_cache_hits": {
                            "type": "number"
                        },
                        "uri_cache_misses": {
                            "type": "number"
                        },
                        "total_uris_cached": {
                            "type": "number"
                        }
                    }
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "WebSiteSnapshot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uptime": {
                    "type": "number"
                },
                "network": {
                    "type": "object",
                    "properties": {
                        "bytes_sent_sec": {
                            "type": "number"
                        },
                        "bytes_recv_sec": {
                            "type": "number"
                        },
                        "connection_attempts_sec": {
                            "type": "number"
                        },
                        "total_bytes_sent": {
                            "type": "number"
                        },
                        "total_bytes_recv": {
                            "type": "number"
                        },
                        "total_connection_attempts": {
                            "type": "number"
                        },
                        "current_connections": {
                            "type": "number"
                        }
                    }
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "number"
                        },
                        "per_sec": {
                            "type": "number"
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                },
                "memory": {
                    "type": "object",
                    "properties": {
                        "handles": {
                            "type": "number"
                        },
                        "private_bytes": {
                            "type": "number"
                        },
                        "private_working_set": {
                            "type": "number"
                        },
                        "system_in_use": {
                            "type": "number"
                        },
                        "installed": {
                            "type": "number"
                        }
                    }
                },
                "cpu": {
                    "type": "object",
                    "properties": {
                        "threads": {
                            "type": "number"
                        },
                        "processes": {
                            "type": "number"
                        },
                        "percent_usage": {
                            "type": "number"
                        }
                    }
                },
                "disk": {
                    "type": "object",
                    "properties": {
                        "io_write_operations_sec":{
                            "type": "number"
                        },
                        "io_read_operations_sec": {
                            "type": "number"
                        },
                        "page_faults_sec": {
                            "type": "number"
                        }
                    }
                },
                "cache": {
                    "type": "object",
                    "properties": {
                        "file_cache_count": {
                            "type": "number"
                        },
                        "file_cache_memory_usage": {
                            "type": "number"
                        },
                        "file_cache_hits": {
                            "type": "number"
                        },
                        "file_cache_misses": {
                            "type": "number"
                        },
                        "total_files_cached": {
                            "type": "number"
                        },
                        "output_cache_count": {
                            "type": "number"
                        },
                        "output_cache_memory_usage": {
                            "type": "number"
                        },
                        "output_cache_hits": {
                            "type": "number"
                        },
                        "output_cache_misses": {
                            "type": "number"
                        },
                        "uri_cache_count": {
                            "type": "number"
                        },
                        "uri_cache_hits": {
                            "type": "number"
                        },
                        "uri_cache_misses": {
                            "type": "number"
                        },
                        "total_uris_cached": {
                            "type": "number"
                        }
                    }
                },
                "website": {
                    "$ref": "#/definitions/WebSite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "ApplicationPoolSnapshot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uptime": {
                    "type": "number"
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "number"
                        },
                        "per_sec": {
                            "type": "number"
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                },
                "memory": {
                    "type": "object",
                    "properties": {
                        "handles": {
                            "type": "number"
                        },
                        "private_bytes": {
                            "type": "number"
                        },
                        "private_working_set": {
                            "type": "number"
                        },
                        "system_in_use": {
                            "type": "number"
                        },
                        "installed": {
                            "type": "number"
                        }
                    }
                },
                "cpu": {
                    "type": "object",
                    "properties": {
                        "threads": {
                            "type": "number"
                        },
                        "processes": {
                            "type": "number"
                        },
                        "percent_usage": {
                            "type": "number"
                        }
                    }
                },
                "disk": {
                    "type": "object",
                    "properties": {
                        "io_write_operations_sec":{
                            "type": "number"
                        },
                        "io_read_operations_sec": {
                            "type": "number"
                        },
                        "page_faults_sec": {
                            "type": "number"
                        }
                    }
                },
                "cache": {
                    "type": "object",
                    "properties": {
                        "file_cache_count": {
                            "type": "number"
                        },
                        "file_cache_memory_usage": {
                            "type": "number"
                        },
                        "file_cache_hits": {
                            "type": "number"
                        },
                        "file_cache_misses": {
                            "type": "number"
                        },
                        "total_files_cached": {
                            "type": "number"
                        },
                        "output_cache_count": {
                            "type": "number"
                        },
                        "output_cache_memory_usage": {
                            "type": "number"
                        },
                        "output_cache_hits": {
                            "type": "number"
                        },
                        "output_cache_misses": {
                            "type": "number"
                        },
                        "uri_cache_count": {
                            "type": "number"
                        },
                        "uri_cache_hits": {
                            "type": "number"
                        },
                        "uri_cache_misses": {
                            "type": "number"
                        },
                        "total_uris_cached": {
                            "type": "number"
                        }
                    }
                },
                "application_pool": {
                    "$ref": "#/definitions/ApplicationPool"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "DefaultDocument": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "This property specifies whether the default document feature is enabled at the specified scope.",
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the default document feature."
                },
                "scope": {
                    "description": "The location in the configuration system that this resource reflects.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "website": {
                    "$ref": "#/definitions/WebSite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "DefaultDocumentEntry": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "default_document": {
                    "$ref": "#/definitions/DefaultDocument"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "UrlRewrite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the Url Rewrite feature."
                },
                "scope": {
                    "description": "The location in the configuration system that this resource reflects.",
                    "type": "string"
                },
                "website": {
                    "$ref": "#/definitions/WebSite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "AllowedServerVariablesSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "entries": {
                  "type": "array",
                  "items":{
                      "type": "string"
                  }
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "InboundRulesSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "use_original_url_encoding": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "InboundRuleCondition": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "match_type": {
                    "type": "string",
                    "enum": [
                        "pattern",
                        "is_file",
                        "is_directory"
                    ]
                }
            }
        },
        "InboundRuleAction": {
            "type": "object",
            "properties": {
                "type" : {
                    "type": "string",
                    "enum": [
                        "rewrite",
                        "redirect",
                        "custom_response",
                        "abort_request",
                        "none"
                    ]
                },
                "url": {
                    "type": "string"
                },
                "append_query_string": {
                    "type": "boolean"
                },
                "log_rewritten_url": {
                    "type": "boolean"
                }
            }
        },
        "InboundRule": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "pattern_syntax": {
                    "type": "string",
                    "enum": [
                        "exact_match",
                        "regular_expression",
                        "wildcard"
                    ]
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "stop_processing": {
                    "type": "boolean"
                },
                "response_cache_directive": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "always",
                        "never",
                        "not_if_rule_matched"
                    ]
                },
                "condition_match_constraints": {
                    "type": "string",
                    "enum": [
                        "match_all",
                        "match_any"
                    ]
                },
                "track_all_captures": {
                    "type": "boolean"
                },
                "action": {
                    "$ref": "#/definitions/InboundRuleAction"
                },
                "server_variables": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            },
                            "replace": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InboundRuleCondition"
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "GlobalRulesSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "use_original_url_encoding": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "GlobalRuleCondition": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "match_type": {
                    "type": "string",
                    "enum": [
                        "pattern",
                        "is_file",
                        "is_directory"
                    ]
                }
            }
        },
        "GlobalRuleAction": {
            "type": "object",
            "properties": {
                "type" : {
                    "type": "string",
                    "enum": [
                        "rewrite",
                        "redirect",
                        "custom_response",
                        "abort_request",
                        "none"
                    ]
                },
                "url": {
                    "type": "string"
                },
                "append_query_string": {
                    "type": "boolean"
                },
                "log_rewritten_url": {
                    "type": "boolean"
                }
            }
        },
        "GlobalRule": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "pattern_syntax": {
                    "type": "string",
                    "enum": [
                        "exact_match",
                        "regular_expression",
                        "wildcard"
                    ]
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "stop_processing": {
                    "type": "boolean"
                },
                "response_cache_directive": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "always",
                        "never",
                        "not_if_rule_matched"
                    ]
                },
                "condition_match_constraints": {
                    "type": "string",
                    "enum": [
                        "match_all",
                        "match_any"
                    ]
                },
                "track_all_captures": {
                    "type": "boolean"
                },
                "action": {
                    "$ref": "#/definitions/GlobalRuleAction"
                },
                "server_variables": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            },
                            "replace": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalRuleCondition"
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "Precondition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "match": {
                    "type": "string",
                    "enum": [
                        "any",
                        "all"
                    ]
                },
                "pattern_syntax": {
                    "type": "string",
                    "enum": [
                        "exact_match",
                        "regular_expression",
                        "wildcard"
                    ]
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InboundRuleCondition"
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "CustomTagSet": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "attribute": {
                            "type": "string"
                        }
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "OutboundRulesSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "rewrite_before_cache": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "OutboundRule": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "precondition": {
                    "$ref": "#/definitions/Precondition"
                },
                "match_type": {
                    "type": "string",
                    "enum": [
                        "response",
                        "server_variable"
                    ]
                },
                "tag_filters": {
                    "type": "object",
                    "properties": {
                        "a": {
                            "type": "boolean"
                        },
                        "area": {
                            "type": "boolean"
                        },
                        "base": {
                            "type": "boolean"
                        },
                        "form": {
                            "type": "boolean"
                        },
                        "frame": {
                            "type": "boolean"
                        },
                        "head": {
                            "type": "boolean"
                        },
                        "iframe": {
                            "type": "boolean"
                        },
                        "img": {
                            "type": "boolean"
                        },
                        "input": {
                            "type": "boolean"
                        },
                        "link": {
                            "type": "boolean"
                        },
                        "script": {
                            "type": "boolean"
                        },
                        "custom": {
                            "$ref": "#/definitions/CustomTagSet"
                        }
                    }
                },
                "server_variable": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "pattern_syntax": {
                    "type": "string",
                    "enum": [
                        "exact_match",
                        "regular_expression",
                        "wildcard"
                    ]
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "stop_processing": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "rewrite_value": {
                    "type": "string"
                },
                "condition_match_constraints": {
                    "type": "string",
                    "enum": [
                        "match_all",
                        "match_any"
                    ]
                },
                "track_all_captures": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InboundRuleCondition"
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "UrlRewriteProvidersSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "UrlRewriteProvider": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "UrlRewriteRewriteMapsSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "UrlRewriteMap": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "ignore_case": {
                    "type": "boolean"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "url_rewrite": {
                    "$ref": "#/definitions/UrlRewrite"
                },
                "_links": {
                    "$ref": "#/definitions/_links"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "config_path": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}